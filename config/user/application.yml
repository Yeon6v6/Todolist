server:
  port: 8080
  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  tomcat:
    accept-count: 20
    max-connections: 100
    threads:
      max: 100
      min-spare: 10
    max-keep-alive-requests: 100
    keep-alive-timeout: 60s
    connection-timeout: 60s
  compression:
    enabled: true
    mime-types: text/html,text/css,application/javascript,application/json,text/javascript
api:
  version: v1
spring:
  mvc:
    servlet:
      path: /api/${api.version}
---
spring:
  application:
    name: user
  profiles:
    active: local
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:13306/todo?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8
    username: application
    password: application
    hikari:
      auto-commit: false
      connection-test-query: SELECT 1
      connection-timeout: 30000
      idle-timeout: 30000
      max-lifetime: 200000
      maximum-pool-size: 20
      minimum-idle: 5
      leakDetectionThreshold: 60000
      pool-name: UserHikariCP
  redis:
    database: 0
    host: localhost
    port: 16379
    timeout: 2000ms
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        show_sql: false
        format_sql: true
    open-in-view: false

kafka:
  bootstrap-servers: localhost:9092
  consumer:
    group-id: user-group
    auto-offset-reset: earliest
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.apache.kafka.common.serialization.StringSerializer

auth:
  password:
    encryption:
      enabled: false  # 개발/테스트용으로 암호화 비활성화

security:
  jwt:
    secret: p8NrklVapBaHriTbHEuBMBUS+pB5ejiaMQskR3c+o5vy/60jHymBsFltWF0C2ws1POSjOiXiNvphiQOsdF925A==
    valid-seconds:
      todolist:
        access-token: 1800
        refresh-token: 7200
    role-name: USER
    access-rules:
      - pattern: "/api/${api.version}/auth/**"
        roles: [ "ANONYMOUS" ]
    permit-url: /,/error,/actuator/**,/api/${api.version}/core/auth/login,/api/${api.version}/user/register,/api/${api.version}/user/check/**

request-auth:
  key: 3uyWRbWKpjameHaps1GqfGXP4ucQVWSR
  iv: M2e1GPeZc5zJlOs1

springdoc:
  swagger-ui.path: /doc.html
  api-docs.path: /api-docs

logging:
  level:
    org.springframework.security: DEBUG
    com.project: DEBUG
    
management:
  endpoints:
    web:
      exposure:
        include: health, info
---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://mysql:3306/todo?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8
    username: application
    password: application
  redis:
    host: redis-master
    port: 6379

kafka:
  bootstrap-servers: kafka:9092